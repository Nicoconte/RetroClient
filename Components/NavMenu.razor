<div class="@SidebarCssClass">
    <div class="sidebar-burguer-button-container">
        <button @onclick="ToggleSidebar" class='btn btn-lg'>
            <i class='fa fa-bars'></i>
        </button>
    </div>
	<div class="sidebar-content-container">

		<a href='/' class="btn sidebar-button-container" @onclick='() => SendDescription("Home")'>
			<div class="@SidebarIconCssClass">
				<i class='fa fa-home'></i>
			</div>
			<div class="@SidebarTextCssClass">
				<span>Home</span>
			</div>
		</a>

		<a href='/browse-games' class="btn sidebar-button-container" @onclick='() => SendDescription("Browse Games")'>
			<div class="@SidebarIconCssClass">
				<i class='fa fa-shopping-bag'></i>
			</div>
			<div class="@SidebarTextCssClass">
				<span>Browse Games</span>
			</div>
		</a>

		<a href="/game-library" class="btn sidebar-button-container" @onclick='() => SendDescription("Game Library")'>
			<div class="@SidebarIconCssClass">
				<i class='fa fa-cubes'></i>
			</div>
			<div class="@SidebarTextCssClass">
				<span>Game Library</span>
			</div>
		</a>

		<a href="/settings" class="btn sidebar-button-container" @onclick='() => SendDescription("Settings")'>
			<div class="@SidebarIconCssClass">
				<i class='fa fa-cogs'></i>
			</div>
			<div class="@SidebarTextCssClass">
				<span>Settings</span>
			</div>
		</a>

		<a href='/games' class="btn sidebar-button-container">
			<div class="@SidebarIconCssClass">
				<i class='fa fa-gavel'></i>
			</div>
			<div class="@SidebarTextCssClass">
				<span>Legal</span>
			</div>
		</a>
	</div>   
    <div class="sidebar-bottom-text">
        <span class='sidebar-bottom-text text-center mb-1'>
            <a class='text-muted ml-1' target='_blank' href='https://github.com/Nicoconte/RetroClient'><i class='fa fa-github'></i></a>
        </span>         
    </div>
</div>

@code {    

	[Parameter]
	public EventCallback<string> OnDescriptionChangeCallback { get; set; }

	public bool IsOpen = false;

	public string SidebarCssClass = "sidebar-container";
	public string SidebarTextCssClass = "sidebar-button-text";
	public string SidebarIconCssClass = "sidebar-button-icon";

	protected override void OnInitialized()
	{
		ChangeSidebarClass();
	}

	public async void SendDescription(string description)
	{
		OnDescriptionChangeCallback.InvokeAsync(description);
	}

	public void ChangeSidebarClass()
	{
		if (IsOpen)
		{
			SidebarCssClass = "sidebar-container";
			SidebarTextCssClass = "sidebar-button-text";
			SidebarIconCssClass = "sidebar-button-icon";
		}
		else
		{
			SidebarCssClass = "sidebar-container-hidden";
			SidebarTextCssClass = "sidebar-button-text-hidden";
			SidebarIconCssClass = "sidebar-button-icon-hidden";
		}
	}

	public void ToggleSidebar() {
		IsOpen = !IsOpen;
		ChangeSidebarClass();
	}
}